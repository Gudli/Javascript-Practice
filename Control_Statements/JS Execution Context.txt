JS Execution Context
-->Global Execution context(this--> in browser it is window object)
-->functional execution context
-->Eval Execution context

phase:
{} -> memory creation phase
   ->Execution phase

	


Ex:
let val1 = 10
let val2 =5
function addNum(num1, num2){
let total =num1+num2
return total
}
let result1 = addNum(val1,val2)
let result2 = addNum(10,2)

Execution:
1. Global Execution
2.Memory phase
   val1->undefined
   val2->undefined
   addnum->defination
   result1->undefined
   result2->undefined
3.Execution phase
  val1<-10
  val2<-5
  addNum---> new variable environment+execution thread(once done it will be deleted)
 memoryphase: val1->undefined
	      val2->undefined
              total->undefined
execution :num1<-10
  	   num2<-5
           total<-15(return to global executional context)


 result1<-15
   addNum---> new variable environment+execution thread(once done it will be deleted)
 memoryphase: val1->undefined
	      val2->undefined
              total->undefined
execution :num1<-10
  	   num2<-2
           total<-12(return to global executional context)

result2<-12




